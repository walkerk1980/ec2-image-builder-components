Parameters:
  CodeBuildVPCId:
    Type: AWS::EC2::VPC::Id
  CodeBuildPrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
  CodeBuildPrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
  CodeBuildSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  CodeBuildS3EncryptionKeyArn:
    Type: String # AWS::KMS::Key
Resources:
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false
  AmazonCloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Join 
                  - ''
                  - - 'arn:aws:codepipeline:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':'
                    - !Ref CodePipeline
  AmazonCloudWatchEventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt 
            - CodeCommitRepo
            - Arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master
      Targets:
        - Arn: !Join 
            - ''
            - - 'arn:aws:codepipeline:'
              - !Ref 'AWS::Region'
              - ':'
              - !Ref 'AWS::AccountId'
              - ':'
              - !Ref CodePipeline
          RoleArn: !GetAtt 
            - AmazonCloudWatchEventRole
            - Arn
          Id: codepipeline-CodePipeline
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: image_builder_components
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt 
                  - CodeCommitRepo
                  - Name
                PollForSourceChanges: false
              RunOrder: 1
        - Name: DeploySharedResources
          Actions:
            - Name: DeployBucketStack
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: DeployCodeBucketOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                OutputFileName: code-bucket-exports.json
                RoleArn: !GetAtt 
                  - CodeDeployServiceRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - codedeploy
                    - !Ref 'AWS::Region'
                    - image-builder-code
                TemplatePath: 'SourceArtifact::src/image_builder_code_bucket.yaml'
              RunOrder: 1
            - Name: DeployIAMStack
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: DeployIAMOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                OutputFileName: iam-exports.json
                RoleArn: !GetAtt 
                  - CodeDeployServiceRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - codedeploy
                    - !Ref 'AWS::Region'
                    - image-builder-iam
                TemplatePath: 'SourceArtifact::src/image_builder_iam_roles.yaml'
              RunOrder: 1
        - Name: ComponentBuild
          Actions:
            - Name: ChefComponentBuild
              InputArtifacts:
                - Name: SourceArtifact
                - Name: DeployCodeBucketOutput
              OutputArtifacts:
                - Name: ChefComponentBuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ChefComponentsCodeBuildProject
                PrimarySource: SourceArtifact
                EnvironmentVariables: '[{"name":"loglevel","value":"DEBUG","type":"PLAINTEXT"}]'
              RunOrder: 1
            - Name: SSMComponentBuild
              InputArtifacts:
                - Name: SourceArtifact
                - Name: DeployCodeBucketOutput
              OutputArtifacts:
                - Name: SSMComponentBuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SSMComponentsCodeBuildProject
                PrimarySource: SourceArtifact
                EnvironmentVariables: '[{"name":"loglevel","value":"DEBUG","type":"PLAINTEXT"}]'
              RunOrder: 1
            - Name: SplunkComponentBuild
              InputArtifacts:
                - Name: SourceArtifact
                - Name: DeployCodeBucketOutput
              OutputArtifacts:
                - Name: SplunkComponentBuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SplunkComponentsCodeBuildProject
                PrimarySource: SourceArtifact
                EnvironmentVariables: '[{"name":"loglevel","value":"DEBUG","type":"PLAINTEXT"}]'
              RunOrder: 1
        - Name: ComponentDeploy
          Actions:
            - Name: DeployChefComponent
              InputArtifacts:
                - Name: ChefComponentBuildOutput
              OutputArtifacts:
                - Name: ChefComponentDeployOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt 
                  - CodeDeployServiceRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - codedeploy
                    - !Ref 'AWS::Region'
                    - image-builder-components-chef
                TemplatePath: 'ChefComponentBuildOutput::chef-template-export.yml'
              RunOrder: 1
            - Name: DeploySSMComponent
              InputArtifacts:
                - Name: SSMComponentBuildOutput
              OutputArtifacts:
                - Name: SSMComponentDeployOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt 
                  - CodeDeployServiceRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - codedeploy
                    - !Ref 'AWS::Region'
                    - image-builder-components-ssm
                TemplatePath: 'SSMComponentBuildOutput::ssm-template-export.yml'
              RunOrder: 1
            - Name: DeploySplunkComponent
              InputArtifacts:
                - Name: SplunkComponentBuildOutput
              OutputArtifacts:
                - Name: SplunkComponentDeployOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt 
                  - CodeDeployServiceRole
                  - Arn
                StackName: !Join 
                  - '-'
                  - - codedeploy
                    - !Ref 'AWS::Region'
                    - image-builder-components-splunk
                TemplatePath: 'SplunkComponentBuildOutput::splunk-template-export.yml'
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
  CodeCommitRepo:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: image_builder_components
      RepositoryDescription: repository of Image Builder Components and CFN stacks to deploy them
  CodeDeployServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
                - cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      Policies:
        - PolicyName: AWS-CodeDeploy-Service-ib-components
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowToPassRoleToLambda
                Effect: Allow
                Action: 'iam:PassRole'
                Condition:
                  StringEquals:
                    'iam:PassedToService': lambda.amazonaws.com
                Resource: 'arn:aws:iam::*:role/service-role/codedeploy-*-imag-ManageComponentsLambdaRo-*'
              - Sid: IAMPerms1
                Effect: Allow
                Action:
                  - 'iam:GetRole'
                  - 'iam:GetPolicy'
                  - 'iam:DeleteRole'
                  - 'iam:DeletePolicy'
                  - 'iam:CreateServiceLinkedRole'
                  - 'iam:CreatePolicy'
                  - 'iam:PutRolePermissionsBoundary'
                  - 'iam:CreateRole'
                  - 'iam:ListPolicyVersions'
                  - 'iam:DetachUserPolicy'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:AttachRolePolicy'
                  - 'iam:CreateUser'
                  - 'iam:DeleteUserPolicy'
                  - 'iam:AttachUserPolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:PutUserPermissionsBoundary'
                Resource:
                  - 'arn:aws:iam::*:policy/service-role/Ec2DescribeImages'
                  # For some reason iam:GetPolicy is only working without the path
                  - 'arn:aws:iam::*:policy/service-role/ManageImageBuilderComponents'
                  - 'arn:aws:iam::*:policy/ManageImageBuilderComponents'
                  # end block 
                  - 'arn:aws:iam::*:role/service-role/codedeploy-*-imag-ManageComponentsLambdaRo-*'
              - Sid: KMSPerms1
                Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:Encrypt'
                  - 'kms:GenerateDataKey'
                Resource: !Ref CodeBuildS3EncryptionKeyArn
              - Sid: DeploymentPerms2
                Effect: Allow
                Action:
                  - 'lambda:CreateFunction'
                  - 'lambda:TagResource'
                  - 'lambda:ListVersionsByFunction'
                  - 'lambda:GetFunctionConfiguration'
                  - 'cloudformation:CreateChangeSet'
                  - 'lambda:UntagResource'
                  - 'lambda:PutFunctionConcurrency'
                  - 'logs:CreateLogStream'
                  - 's3:AbortMultipartUpload'
                  - 'lambda:ListTags'
                  - 'lambda:DeleteFunction'
                  - 'lambda:InvokeFunction'
                  - 'lambda:GetFunction'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 's3:GetBucketAcl'
                  - 'logs:PutLogEvents'
                  - 'lambda:UpdateAlias'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:DeleteAlias'
                  - 'lambda:PublishVersion'
                  - 'lambda:DeleteFunctionConcurrency'
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 's3:GetBucketLocation'
                  - 's3:GetObjectVersion'
                  - 'lambda:CreateAlias'
                Resource:
                  - !GetAtt
                    - CodePipelineArtifactStoreBucket
                    - Arn
                  - !Join
                    - ''
                    - - !GetAtt
                        - CodePipelineArtifactStoreBucket
                        - Arn
                      - /*
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*'
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*/*'
                  - 'arn:aws:cloudformation:*:aws:transform/Serverless-2016-10-31'
                  - 'arn:aws:lambda:*:*:function:CreateChefComponents'
                  - 'arn:aws:lambda:*:*:function:CreateSSMComponents'
                  - 'arn:aws:logs:*:*:log-group:/aws/codedeploy/image_builder_code_bucket'
                  - 'arn:aws:logs:*:*:log-group:/aws/codedeploy/image_builder_code_bucket:*'
              - Sid: DeploymentPerms3
                Effect: Allow
                Action:
                  - 's3:PutAnalyticsConfiguration'
                  - 's3:PutAccelerateConfiguration'
                  - 's3:CreateBucket'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:DeleteBucketWebsite'
                  - 's3:PutLifecycleConfiguration'
                  - 's3:PutBucketAcl'
                  - 's3:DeleteBucket'
                  - 's3:PutBucketVersioning'
                  - 's3:PutBucketPublicAccessBlock'
                  - 's3:PutMetricsConfiguration'
                  - 's3:PutReplicationConfiguration'
                  - 's3:PutBucketCORS'
                  - 's3:PutInventoryConfiguration'
                  - 's3:PutBucketNotification'
                  - 's3:PutBucketWebsite'
                  - 's3:PutBucketLogging'
                Resource:
                  - !GetAtt
                    - CodePipelineArtifactStoreBucket
                    - Arn
                  - !Join
                    - ''
                    - - !GetAtt
                        - CodePipelineArtifactStoreBucket
                        - Arn
                      - /*
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*'
              - Sid: CreateLogGroup
                Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/codedeploy/image_builder_code_bucket'
                  - 'arn:aws:logs:*:*:log-group:/aws/codedeploy/image_builder_code_bucket:*'
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Statement:
              - Action:
                  - s3:*
                Resource: 'arn:aws:s3:::*codepipelineartifactstor*'
                Effect: Allow
              - Action:
                  - 'iam:PassRole'
                Resource: !GetAtt
                  - CodeDeployServiceRole
                  - Arn
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - 'ecr:DescribeImages'
                Resource: '*'
            Version: 2012-10-17
  ChefComponentsCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: image_builder_chef_components
      Source:
        Type: CODECOMMIT
        Location: !GetAtt 
          - CodeCommitRepo
          - CloneUrlHttp
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        BuildSpec: src/chef/chef_component_buildspec.yml
        InsecureSsl: false
      SourceVersion: refs/heads/master
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        Type: LINUX_CONTAINER
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: []
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      TimeoutInMinutes: 20
      QueuedTimeoutInMinutes: 60
      EncryptionKey: !Ref CodeBuildS3EncryptionKeyArn
        #!Join
        #- ':'
        #- - 'arn:aws:kms'
        #  - 'AWS::Region'
        #  - 'AWS::AccountId'
        #  - !Join
        #    - ''
        #    - - 'key/'
        #      - !Ref CodeBuildS3EncryptionKeyId
      VpcConfig:
        VpcId: !Ref CodeBuildVPCId
        Subnets:
          - !Ref CodeBuildPrivateSubnet1
          - !Ref CodeBuildPrivateSubnet2
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroupId
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: /aws/codebuild/image_builder_chef_components
          StreamName: build
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
  SSMComponentsCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: image_builder_ssm_components
      Source:
        Type: CODECOMMIT
        Location: !GetAtt 
          - CodeCommitRepo
          - CloneUrlHttp
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        BuildSpec: src/ssm_agent/ssm_component_buildspec.yml
        InsecureSsl: false
      SourceVersion: refs/heads/master
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        Type: LINUX_CONTAINER
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: []
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      TimeoutInMinutes: 20
      QueuedTimeoutInMinutes: 60
      EncryptionKey: !Ref CodeBuildS3EncryptionKeyArn
      VpcConfig:
        VpcId: !Ref CodeBuildVPCId
        Subnets:
          - !Ref CodeBuildPrivateSubnet1
          - !Ref CodeBuildPrivateSubnet2
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroupId
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: /aws/codebuild/image_builder_ssm_components
          StreamName: build
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
  SplunkComponentsCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: image_builder_splunk_components
      Source:
        Type: CODECOMMIT
        Location: !GetAtt 
          - CodeCommitRepo
          - CloneUrlHttp
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        BuildSpec: src/splunk_agent/splunk_component_buildspec.yml
        InsecureSsl: false
      SourceVersion: refs/heads/master
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        Type: LINUX_CONTAINER
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: []
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      TimeoutInMinutes: 20
      QueuedTimeoutInMinutes: 60
      EncryptionKey: !Ref CodeBuildS3EncryptionKeyArn
      VpcConfig:
        VpcId: !Ref CodeBuildVPCId
        Subnets:
          - !Ref CodeBuildPrivateSubnet1
          - !Ref CodeBuildPrivateSubnet2
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroupId
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: /aws/codebuild/image_builder_splunk_components
          StreamName: build
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CodeBuildBasePolicy-image_builder_components
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/codebuild/image_builder_chef_components'
                  - 'arn:aws:logs:*:*:log-group:/aws/codebuild/image_builder_chef_components:*'
                  - 'arn:aws:logs:*:*:log-group:/aws/codebuild/image_builder_*_components'
                  - 'arn:aws:logs:*:*:log-group:/aws/codebuild/image_builder_*_components:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - !GetAtt
                    - CodePipelineArtifactStoreBucket
                    - Arn
                  - !Join
                    - ''
                    - - !GetAtt
                        - CodePipelineArtifactStoreBucket
                        - Arn
                      - /*
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - 'arn:aws:codecommit:*:*:image_builder_components'
                Action:
                  - 'codecommit:GitPull'
              - Effect: Allow
                Action:
                  - 'codebuild:CreateReportGroup'
                  - 'codebuild:CreateReport'
                  - 'codebuild:UpdateReport'
                  - 'codebuild:BatchPutTestCases'
                Resource:
                  - 'arn:aws:codebuild:*:*:report-group/image_builder_chef_components-*'
                  - 'arn:aws:codebuild:*:*:report-group/image_builder_*_components-*'
        - PolicyName: CodeBuildCloudWatchLogsPolicy-image_builder_chef_components
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/codebuild/image_builder_*_components'
                  - ' arn:aws:logs:*:*:log-group:/aws/codebuild/image_builder_*_components:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
        - PolicyName: CodeBuildVpcPolicy-image_builder_components
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeVpcs'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterfacePermission'
                Resource: 'arn:aws:ec2:*:*:network-interface/*'
                Condition:
                  StringLike:
                    'ec2:Subnet':
                      - !Join
                        - '/'
                        - - 'arn:aws:ec2:*:*:subnet'
                          - !Ref CodeBuildPrivateSubnet1
                      - !Join
                        - '/'
                        - - 'arn:aws:ec2:*:*:subnet'
                          - !Ref CodeBuildPrivateSubnet2
                    'ec2:AuthorizedService': codebuild.amazonaws.com
        - PolicyName: codebuild-image_builder_components-worker_policy
          PolicyDocument:
            Statement:
              - Sid: ValidateTemplate
                Effect: Allow
                Action: cloudformation:ValidateTemplate
                Resource: '*'
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:TagResource'
                  - 'kms:UntagResource'
                  - 'kms:Encrypt'
                  - 'kms:GenerateDataKey'
                  - 'kms:CreateAlias'
                  - 'kms:CreateKey'
                Resource: !Ref CodeBuildS3EncryptionKeyArn
              - Sid: VisualEditor1
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                  - 's3:GetObjectVersion'
                Resource:
                  - !GetAtt
                    - CodePipelineArtifactStoreBucket
                    - Arn
                  - !Join
                    - ''
                    - - !GetAtt
                        - CodePipelineArtifactStoreBucket
                        - Arn
                      - /*
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*'
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*/*'
              - Sid: VisualEditor2
                Effect: Allow
                Action:
                  - 's3:PutBucketPublicAccessBlock'
                  - 's3:PutAnalyticsConfiguration'
                  - 's3:PutAccelerateConfiguration'
                  - 's3:PutMetricsConfiguration'
                  - 's3:PutReplicationConfiguration'
                  - 's3:CreateBucket'
                  - 's3:PutBucketCORS'
                  - 's3:PutInventoryConfiguration'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:PutBucketNotification'
                  - 's3:DeleteBucketWebsite'
                  - 's3:PutBucketWebsite'
                  - 's3:PutBucketLogging'
                  - 's3:PutLifecycleConfiguration'
                  - 's3:PutBucketAcl'
                  - 's3:DeleteBucket'
                  - 's3:PutBucketVersioning'
                Resource:
                  - !GetAtt
                    - CodePipelineArtifactStoreBucket
                    - Arn
                  - !Join
                    - ''
                    - - !GetAtt
                        - CodePipelineArtifactStoreBucket
                        - Arn
                      - /*
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*'
                  - !Join
                    - '-'
                    - - 'arn:aws:s3:::codedeploy'
                      - !Ref 'AWS::Region'
                      - 'image-builder-code-*/*'
